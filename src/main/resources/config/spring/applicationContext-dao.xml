<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 加载db.properties文件中的内容，db.properties文件中的key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:config/db.properties" />

	<bean id="master0_datasource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${master0.jdbc.url}" />
		<property name="username" value="${master0.jdbc.username}" />
		<property name="password" value="${master0.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<!-- 连接池中最少空闲maxIdle个连接 -->
		<property name="minIdle" value="5" />
		<!-- 连接池激活的最大数据库连接总数。设为0表示无限制 -->
		<property name="maxActive" value="20" />
		<!-- 最大建立连接等待时间，单位为 ms，如果超过此时间将接到异常。设为-1表示无限制 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置连接池中连接可空闲的时间(针对连接池中的连接对象.空闲超过这个时间则断开，直到连接池中的连接数到minIdle为止)，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<!-- 建议配置为true，不影响性能，并且保证安全性 -->
		<property name="testWhileIdle" value="true" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="false" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小(Oracle或mysql5.5及以上使用) -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j,wall" />
		<!-- 配置关闭长时间不使用的连接 -->
		<!-- 是否清理removeAbandonedTimeout秒没有使用的活动连接,清理后并没有放回连接池(针对未被close的活动连接) -->
		<property name="removeAbandoned" value="true" />
		<!-- 活动连接的最大空闲时间,1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 连接池收回空闲的活动连接时是否打印消息 -->
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="slave0_datasource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${slave0.jdbc.url}" />
		<property name="username" value="${slave0.jdbc.username}" />
		<property name="password" value="${slave0.jdbc.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<!-- 连接池中最少空闲maxIdle个连接 -->
		<property name="minIdle" value="5" />
		<!-- 连接池激活的最大数据库连接总数。设为0表示无限制 -->
		<property name="maxActive" value="20" />
		<!-- 最大建立连接等待时间，单位为 ms，如果超过此时间将接到异常。设为-1表示无限制 -->
		<property name="maxWait" value="60000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置连接池中连接可空闲的时间(针对连接池中的连接对象.空闲超过这个时间则断开，直到连接池中的连接数到minIdle为止)，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
		<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
		<!-- 建议配置为true，不影响性能，并且保证安全性 -->
		<property name="testWhileIdle" value="true" />
		<!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnBorrow" value="false" />
		<!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小(Oracle或mysql5.5及以上使用) -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j" />
		<!-- 配置关闭长时间不使用的连接 -->
		<!-- 是否清理removeAbandonedTimeout秒没有使用的活动连接,清理后并没有放回连接池(针对未被close的活动连接) -->
		<property name="removeAbandoned" value="true" />
		<!-- 活动连接的最大空闲时间,1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 连接池收回空闲的活动连接时是否打印消息 -->
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="log4j" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>

	<bean id="dataSource"
		class="cn.ljaer.ssm.datasource.ThreadLocalRoutingDataSource">
		<property name="defaultTargetDataSource" ref="master0_datasource" />
		<property name="targetDataSources">
			<map>
				<entry key="master0" value-ref="master0_datasource" />
				<entry key="slave0" value-ref="slave0_datasource" />
				<entry key="slave1" value-ref="slave0_datasource" />
				<entry key="slave2" value-ref="slave0_datasource" />
				<entry key="slave3" value-ref="slave0_datasource" />
			</map>
		</property>
	</bean>

	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath:cn/ljaer/ssm/sqlMapper/*Mapper.xml" />
	</bean>

	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage" value="cn.ljaer.ssm.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>